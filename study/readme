无监督学习：给定的训练集只作为输入的特征向量x，而未给出任何相对应的标签
            目的：用聚类算法找出数据中的相似样例，或将数据从高维空间映射到维数更少的空间

有监督学习：给定训练集的每个个体是一对作为输入的特征向量和标签
           目的：推断各个参数，预测测试数据的目标值

无监督学习：
分布方法：
1.最大期望值法
2.高斯混合聚类算法

质心点方法（寻求最优解）：
寻找各簇的中心，将数据点划分到离它最近的簇，最小化簇的质心点和被划归到该簇的数据之间的距离。
k均值算法：
运用欧式距离

密度方法：
处理簇的形状和数量都是未知数的数据集
均值漂移：
非参数估计算法，寻找数据集核密度函数的局部最大值，i=1，2...各簇的中心，局部最大值的数量即为簇的数量

层次方法：
用距离标准来指定两个簇无法合成一个簇的最大距离
分割聚类：
方法：整体的数据放在一个簇，将其两个不怎么相似的簇，至各数据点自成一簇
合成聚类：
方法：各成一簇，距离最近的两个簇合并成一个簇，计算新的簇和其他簇的距离，重复，至于一个包中

降维
PCA

有监督机器学习








文件命名的时候不要使用跟模块一样的名字会出现调用失败的

Numpy---处理向量和行列式计算的库
Matplotlib--用于科学计算的库
Pandas--提供类似R语言的数据框架的库
Scikit-learn--用于机器学习的库



Numpy基础：数组和矢量计算
存取文本文件(加载一个二维的数组)：
Arr=np.loadtxt(‘array.txt’,delimiter=’,’)

线性代数
Dot函数矩阵乘法

随机漫步
1.前100个随机漫步值生成的折线图，从0开始，步长为1和-1，且以相等的概率出现
2.一次模拟多个随机漫步

Pandas
Series一维数组的对象
字符串表现形式：索引在左边，值在右边
obj=Series([4,7,-5,3],index=['d','b','a','c'])
通过Series来创建字典
sdata={'first':1,'second':2,'third':3}
命名
obj1.name='test'
obj1.index.name='state'

DataFrame表格型的数据结构
Ffill/pad可以实现向数字大的填充
obj3.reindex(range(6),method='pad')

算术运算和数据对齐df1+df2
自动的数据对齐操作在不重叠的索引处引入NA值，取并集

算术填充df1.sub(df2,fill_value=0)
同项向减，单独跟0运算(df2-df1)

映射
apply 用在dataframe上，用于对row或者column进行计算；
 f = lambda x: x.max() - x.min()
 df.apply(f)
applymap 用于dataframe上,作用在dataframe的每一个元素上
df.applymap(f)

map （其实是python自带的）用于series上，是元素级别的操作。
df['b'].map(format)

唯一值和值计数
uniques=obj4.unique()
obj4.value_counts()

处理缺失数据
Dropna 根据各标签的值是否存在缺失数据对轴标签进行过滤，可通过阈值调节对缺失值的容忍度
Fillna 用指定值或插值方法填充缺失数据
Isnull 返回一个含有布尔值的对象，这些布尔值表示那些值是缺失值/NA，该对象的类型与源类型一样
Notnull isnull的否定

pd.DataFrame可以实现删去不显示的效果，Series仍会显示出来，用nan表示
data1=pd.DataFrame([[1,NA,3.4,NA,7],[NA,NA,NA,NA,NA],[0,3,45,66,2,4]])
data1=Series([[1,NA,3.4,NA,7],[NA,NA,NA,NA,NA],[0,3,45,66,2,4]])
舍去包含NA的行
clean=data1.dropna()
舍去全部是NA的行
print(data1.dropna(how='all'))

填充缺失数据(中位数)
print(data1.fillna(data1.mean()))

层次化索引
data3[:,2]


数据加载、存储与文件格式
读取文件(标题不存在)
pd.read_csv('housing.csv',header=None)

读取前几行数
Nrows=5
读取列数

Json数据
Json.dumps将python转化为json格式
Json.loads将json转换为python格式

读取excel文件
xls=pd.ExcelFile('data.xls')

Web API的调用
import requests
url='https://api.github.com/search/repositories?q=language:python&sort=stars'
resp=requests.get(url)
